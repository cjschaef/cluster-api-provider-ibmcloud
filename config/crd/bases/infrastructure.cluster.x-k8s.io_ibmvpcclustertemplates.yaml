---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: ibmvpcclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: IBMVPCClusterTemplate
    listKind: IBMVPCClusterTemplateList
    plural: ibmvpcclustertemplates
    shortNames:
    - ibmvpcct
    singular: ibmvpcclustertemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of IBMVPCClusterTemplate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IBMVPCClusterTemplate is the Schema for the ibmvpcclustertemplates
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMVPCClusterTemplateSpec defines the desired state of IBMVPCClusterTemplate.
            properties:
              template:
                description: IBMVPCClusterTemplateResource describes the data needed
                  to create an IBMVPCCluster from a template.
                properties:
                  metadata:
                    description: |-
                      Standard object's metadata.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
                    properties:
                      controlPlaneEndpoint:
                        description: ControlPlaneEndpoint represents the endpoint
                          used to communicate with the control plane.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      controlPlaneLoadBalancer:
                        description: ControlPlaneLoadBalancer is optional configuration
                          for customizing control plane behavior.
                        properties:
                          additionalListeners:
                            description: AdditionalListeners sets the additional listeners
                              for the control plane load balancer.
                            items:
                              description: |-
                                AdditionalListenerSpec defines the desired state of an
                                additional listener on an VPC load balancer.
                              properties:
                                port:
                                  description: Port sets the port for the additional
                                    listener.
                                  format: int64
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                              required:
                              - port
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - port
                            x-kubernetes-list-type: map
                          backendPools:
                            description: backendPools defines the LB's backend pools.
                            items:
                              description: BackendPoolSpec defines the desired configuration
                                of a VPC Load Balancer Backend Pool.
                              properties:
                                algorithm:
                                  description: algorithm defines the load balancing
                                    algorithm to use.
                                  type: string
                                healthDelay:
                                  description: healthDelay defines the seconds to
                                    wait between health checks.
                                  format: int64
                                  type: integer
                                healthMonitorPort:
                                  description: healthMonitorPort defines the port
                                    to perform health monitoring on.
                                  format: int64
                                  type: integer
                                healthMonitorURL:
                                  description: healthMonitorURL defines the URL to
                                    use for health monitoring.
                                  type: string
                                healthRetries:
                                  description: healthRetries defines the max retries
                                    for health check.
                                  format: int64
                                  type: integer
                                healthTimeout:
                                  description: healthTimeout defines the seconds to
                                    wait for a health check response.
                                  format: int64
                                  type: integer
                                healthType:
                                  description: healthType defines the protocol used
                                    for health checks.
                                  type: string
                                name:
                                  description: name defines the name of the Backend
                                    Pool.
                                  type: string
                                protocol:
                                  description: protocol defines the protocol to use
                                    for the Backend Pool.
                                  type: string
                              required:
                              - algorithm
                              - healthDelay
                              - healthRetries
                              - healthTimeout
                              - healthType
                              - protocol
                              type: object
                            type: array
                          id:
                            description: id of the loadbalancer
                            type: string
                          name:
                            description: Name sets the name of the VPC load balancer.
                            maxLength: 63
                            type: string
                          public:
                            default: true
                            description: public indicates that load balancer is public
                              or private
                            type: boolean
                        type: object
                      image:
                        description: image represents the Image details used for the
                          cluster.
                        properties:
                          cosBucket:
                            description: cosBucket is the name of the IBM Cloud COS
                              Bucket containing the source of the image, if necessary.
                            type: string
                          cosBucketRegion:
                            description: cosBucketRegion is the COS region the bucket
                              is in.
                            type: string
                          cosInstance:
                            description: cosInstance is the name of the IBM Cloud
                              COS Instance containing the source of the image, if
                              necessary.
                            type: string
                          cosObject:
                            description: cosObject is the name of a IBM Cloud COS
                              Object used as the source of the image, if necessary.
                            type: string
                          name:
                            description: name is the name of the desired VPC Custom
                              Image.
                            type: string
                          operatingSystem:
                            description: operatingSystem is the Custom Image's Operating
                              System name.
                            type: string
                          resourceGroup:
                            description: resourceGroup is the Resource Group to create
                              the Custom Image in.
                            properties:
                              id:
                                description: id defines the generic IBM Cloud Resource
                                  ID.
                                type: string
                              name:
                                description: name defines the generic IBM Cloud Resource
                                  Name.
                                type: string
                            required:
                            - id
                            type: object
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: if any of cosInstance, cosBucket, or cosObject
                            are specified, all must be specified
                          rule: (has(self.cosInstance) && has(self.cosBucket) && has(self.cosObject))
                            || (!has(self.cosInstance) && !has(self.cosBucket) &&
                            !has(self.cosObject))
                      loadbalancers:
                        description: loadBalancers is a set of VPC Load Balancers
                          definition to use for the cluster.
                        items:
                          description: VPCLoadBalancerSpec defines the desired state
                            of an VPC load balancer.
                          properties:
                            additionalListeners:
                              description: AdditionalListeners sets the additional
                                listeners for the control plane load balancer.
                              items:
                                description: |-
                                  AdditionalListenerSpec defines the desired state of an
                                  additional listener on an VPC load balancer.
                                properties:
                                  port:
                                    description: Port sets the port for the additional
                                      listener.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - port
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - port
                              x-kubernetes-list-type: map
                            backendPools:
                              description: backendPools defines the LB's backend pools.
                              items:
                                description: BackendPoolSpec defines the desired configuration
                                  of a VPC Load Balancer Backend Pool.
                                properties:
                                  algorithm:
                                    description: algorithm defines the load balancing
                                      algorithm to use.
                                    type: string
                                  healthDelay:
                                    description: healthDelay defines the seconds to
                                      wait between health checks.
                                    format: int64
                                    type: integer
                                  healthMonitorPort:
                                    description: healthMonitorPort defines the port
                                      to perform health monitoring on.
                                    format: int64
                                    type: integer
                                  healthMonitorURL:
                                    description: healthMonitorURL defines the URL
                                      to use for health monitoring.
                                    type: string
                                  healthRetries:
                                    description: healthRetries defines the max retries
                                      for health check.
                                    format: int64
                                    type: integer
                                  healthTimeout:
                                    description: healthTimeout defines the seconds
                                      to wait for a health check response.
                                    format: int64
                                    type: integer
                                  healthType:
                                    description: healthType defines the protocol used
                                      for health checks.
                                    type: string
                                  name:
                                    description: name defines the name of the Backend
                                      Pool.
                                    type: string
                                  protocol:
                                    description: protocol defines the protocol to
                                      use for the Backend Pool.
                                    type: string
                                required:
                                - algorithm
                                - healthDelay
                                - healthRetries
                                - healthTimeout
                                - healthType
                                - protocol
                                type: object
                              type: array
                            id:
                              description: id of the loadbalancer
                              type: string
                            name:
                              description: Name sets the name of the VPC load balancer.
                              maxLength: 63
                              type: string
                            public:
                              default: true
                              description: public indicates that load balancer is
                                public or private
                              type: boolean
                          type: object
                        type: array
                      networkSpec:
                        description: networkSpec represents the VPC network to use
                          for the cluster.
                        properties:
                          computeSubnetsSpec:
                            description: computeSubnetsSpec is a set of Subnet's which
                              define the Compute subnets.
                            items:
                              description: Subnet describes a subnet.
                              properties:
                                cidr:
                                  type: string
                                id:
                                  type: string
                                name:
                                  type: string
                                zone:
                                  type: string
                              type: object
                            type: array
                          controlPlaneSubentsSpec:
                            description: controlPlaneSubnetsSpec is a set of Subnet's
                              which define the Control Plane subnets.
                            items:
                              description: Subnet describes a subnet.
                              properties:
                                cidr:
                                  type: string
                                id:
                                  type: string
                                name:
                                  type: string
                                zone:
                                  type: string
                              type: object
                            type: array
                          resourceGroup:
                            description: |-
                              resourceGroup is the name of the Resource Group containing all of the newtork resources.
                              This can be different than the Resource Group containing the remaining cluster resources.
                            type: string
                          securityGroups:
                            description: securityGroups is a set of SecurityGroup's
                              which define the VPC Security Groups that manage traffic
                              within and out of the VPC.
                            items:
                              description: SecurityGroup defines a VPC Security Group
                                that should exist or be created within the specified
                                VPC, with the specified Security Group Rules.
                              properties:
                                id:
                                  description: id of the Security Group.
                                  type: string
                                name:
                                  description: name of the Security Group.
                                  type: string
                                resourceGroup:
                                  description: resourceGroup of the Security Group.
                                  type: string
                                rules:
                                  description: rules are the Security Group Rules
                                    for the Security Group.
                                  items:
                                    description: SecurityGroupRule defines a VPC Security
                                      Group Rule for a specified Security Group.
                                    properties:
                                      action:
                                        description: action defines whether to allow
                                          or deny traffic defined by the Security
                                          Group Rule.
                                        enum:
                                        - allow
                                        - deny
                                        type: string
                                      destination:
                                        description: |-
                                          destination is a SecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                          Only used when direction is SecurityGroupRuleDirectionOutbound.
                                        properties:
                                          icmpCode:
                                            description: |-
                                              icmpCode is the ICMP code for the Rule.
                                              Only used when Protocol is SecurityGroupProtocolICMP.
                                            format: int64
                                            type: integer
                                          icmpType:
                                            description: |-
                                              icmpType is the ICMP type for the Rule.
                                              Only used when Protocol is SecurityGroupProtocolICMP.
                                            format: int64
                                            type: integer
                                          portRange:
                                            description: portRange is a range of ports
                                              allowed for the Rule's remote.
                                            properties:
                                              maximumPort:
                                                description: maximumPort is the inclusive
                                                  upper range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                              minimumPort:
                                                description: minimumPort is the inclusive
                                                  lower range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            type: object
                                            x-kubernetes-validations:
                                            - message: maximum port must be greater
                                                than or equal to minimum port
                                              rule: self.maximumPort >= self.minimumPort
                                          protocol:
                                            description: protocol defines the traffic
                                              protocol used for the Security Group
                                              Rule.
                                            enum:
                                            - all
                                            - icmp
                                            - tcp
                                            - udp
                                            type: string
                                          remotes:
                                            description: |-
                                              remotes is a set of SecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                              Specifying multiple SecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                              This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                            items:
                                              description: |-
                                                SecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                                The type of remote defines the additional remote details where are used for defining the remote.
                                              properties:
                                                cidrSubnetName:
                                                  description: |-
                                                    cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                    Only used when remoteType is SecurityGroupRuleRemoteTypeCIDR.
                                                  type: string
                                                ip:
                                                  description: |-
                                                    ip is the IP to use for the remote's destination/source.
                                                    Only used when remoteType is SecurityGroupRuleRemoteTypeIP.
                                                  type: string
                                                remoteType:
                                                  description: remoteType defines
                                                    the type of filter to define for
                                                    the remote's destination/source.
                                                  enum:
                                                  - any
                                                  - cidr
                                                  - ip
                                                  - sg
                                                  type: string
                                                securityGroupName:
                                                  description: |-
                                                    securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                    Only used when remoteType is SecurityGroupRuleRemoteTypeSG
                                                  type: string
                                              required:
                                              - remoteType
                                              type: object
                                              x-kubernetes-validations:
                                              - message: cidrSubnetName, ip, and securityGroupName
                                                  are not valid for SecurityGroupRuleRemoteTypeAny
                                                  remoteType
                                                rule: 'self.remoteType == ''any''
                                                  ? (!has(self.cidrSubnetName) &&
                                                  !has(self.ip) && !has(self.securityGroupName))
                                                  : true'
                                              - message: only cidrSubnetName is valid
                                                  for SecurityGroupRuleRemoteTypeCIDR
                                                  remoteType
                                                rule: 'self.remoteType == ''cidr''
                                                  ? (has(self.cidrSubnetName) && !has(self.ip)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only ip is valid for SecurityGroupRuleRemoteTypeIP
                                                  remoteType
                                                rule: 'self.remoteType == ''ip'' ?
                                                  (has(self.ip) && !has(self.cidrSubnetName)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only securityGroupName is
                                                  valid for SecurityGroupRuleRemoteTypeSG
                                                  remoteType
                                                rule: 'self.remoteType == ''sg'' ?
                                                  (has(self.securityGroupName) &&
                                                  !has(self.cidrSubnetName) && !has(self.ip))
                                                  : true'
                                            type: array
                                        required:
                                        - protocol
                                        - remotes
                                        type: object
                                        x-kubernetes-validations:
                                        - message: icmpCode and icmpType are only
                                            supported for SecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                            && !has(self.icmpType)) : true'
                                        - message: portRange is not valid for SecurityGroupRuleProtocolAll
                                            protocol
                                          rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                            : true'
                                        - message: portRange is not valid for SecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                            : true'
                                      direction:
                                        description: direction defines whether the
                                          traffic is inbound or outbound for the Security
                                          Group Rule.
                                        enum:
                                        - inbound
                                        - outbound
                                        type: string
                                      securityGroupID:
                                        description: securityGroupID is the ID of
                                          the Security Group for the Security Group
                                          Rule.
                                        type: string
                                      source:
                                        description: |-
                                          source is a SecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                          Only used when direction is SecurityGroupRuleDirectionInbound.
                                        properties:
                                          icmpCode:
                                            description: |-
                                              icmpCode is the ICMP code for the Rule.
                                              Only used when Protocol is SecurityGroupProtocolICMP.
                                            format: int64
                                            type: integer
                                          icmpType:
                                            description: |-
                                              icmpType is the ICMP type for the Rule.
                                              Only used when Protocol is SecurityGroupProtocolICMP.
                                            format: int64
                                            type: integer
                                          portRange:
                                            description: portRange is a range of ports
                                              allowed for the Rule's remote.
                                            properties:
                                              maximumPort:
                                                description: maximumPort is the inclusive
                                                  upper range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                              minimumPort:
                                                description: minimumPort is the inclusive
                                                  lower range of ports.
                                                format: int64
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            type: object
                                            x-kubernetes-validations:
                                            - message: maximum port must be greater
                                                than or equal to minimum port
                                              rule: self.maximumPort >= self.minimumPort
                                          protocol:
                                            description: protocol defines the traffic
                                              protocol used for the Security Group
                                              Rule.
                                            enum:
                                            - all
                                            - icmp
                                            - tcp
                                            - udp
                                            type: string
                                          remotes:
                                            description: |-
                                              remotes is a set of SecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                              Specifying multiple SecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                              This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                            items:
                                              description: |-
                                                SecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                                The type of remote defines the additional remote details where are used for defining the remote.
                                              properties:
                                                cidrSubnetName:
                                                  description: |-
                                                    cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                    Only used when remoteType is SecurityGroupRuleRemoteTypeCIDR.
                                                  type: string
                                                ip:
                                                  description: |-
                                                    ip is the IP to use for the remote's destination/source.
                                                    Only used when remoteType is SecurityGroupRuleRemoteTypeIP.
                                                  type: string
                                                remoteType:
                                                  description: remoteType defines
                                                    the type of filter to define for
                                                    the remote's destination/source.
                                                  enum:
                                                  - any
                                                  - cidr
                                                  - ip
                                                  - sg
                                                  type: string
                                                securityGroupName:
                                                  description: |-
                                                    securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                    Only used when remoteType is SecurityGroupRuleRemoteTypeSG
                                                  type: string
                                              required:
                                              - remoteType
                                              type: object
                                              x-kubernetes-validations:
                                              - message: cidrSubnetName, ip, and securityGroupName
                                                  are not valid for SecurityGroupRuleRemoteTypeAny
                                                  remoteType
                                                rule: 'self.remoteType == ''any''
                                                  ? (!has(self.cidrSubnetName) &&
                                                  !has(self.ip) && !has(self.securityGroupName))
                                                  : true'
                                              - message: only cidrSubnetName is valid
                                                  for SecurityGroupRuleRemoteTypeCIDR
                                                  remoteType
                                                rule: 'self.remoteType == ''cidr''
                                                  ? (has(self.cidrSubnetName) && !has(self.ip)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only ip is valid for SecurityGroupRuleRemoteTypeIP
                                                  remoteType
                                                rule: 'self.remoteType == ''ip'' ?
                                                  (has(self.ip) && !has(self.cidrSubnetName)
                                                  && !has(self.securityGroupName))
                                                  : true'
                                              - message: only securityGroupName is
                                                  valid for SecurityGroupRuleRemoteTypeSG
                                                  remoteType
                                                rule: 'self.remoteType == ''sg'' ?
                                                  (has(self.securityGroupName) &&
                                                  !has(self.cidrSubnetName) && !has(self.ip))
                                                  : true'
                                            type: array
                                        required:
                                        - protocol
                                        - remotes
                                        type: object
                                        x-kubernetes-validations:
                                        - message: icmpCode and icmpType are only
                                            supported for SecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode)
                                            && !has(self.icmpType)) : true'
                                        - message: portRange is not valid for SecurityGroupRuleProtocolAll
                                            protocol
                                          rule: 'self.protocol == ''all'' ? !has(self.portRange)
                                            : true'
                                        - message: portRange is not valid for SecurityGroupRuleProtocolIcmp
                                            protocol
                                          rule: 'self.protocol == ''icmp'' ? !has(self.portRange)
                                            : true'
                                    required:
                                    - action
                                    - direction
                                    type: object
                                    x-kubernetes-validations:
                                    - message: both destination and source cannot
                                        be provided
                                      rule: (has(self.destination) && !has(self.source))
                                        || (!has(self.destination) && has(self.source))
                                    - message: source must be set for SecurityGroupRuleDirectionInbound
                                        direction
                                      rule: 'self.direction == ''inbound'' ? has(self.source)
                                        : true'
                                    - message: destination is not valid for SecurityGroupRuleDirectionInbound
                                        direction
                                      rule: 'self.direction == ''inbound'' ? !has(self.destination)
                                        : true'
                                    - message: destination must be set for SecurityGroupRuleDirectionOutbound
                                        direction
                                      rule: 'self.direction == ''outbound'' ? has(self.destination)
                                        : true'
                                    - message: source is not valid for SecurityGroupRuleDirectionOutbound
                                        direction
                                      rule: 'self.direction == ''outbound'' ? !has(self.source)
                                        : true'
                                  type: array
                                tags:
                                  description: tags are tags to add to the Security
                                    Group.
                                  items:
                                    type: string
                                  type: array
                                vpc:
                                  description: vpc is the IBM Cloud VPC for the Security
                                    Group.
                                  properties:
                                    id:
                                      description: id of resource.
                                      minLength: 1
                                      type: string
                                    name:
                                      description: name of resource.
                                      minLength: 1
                                      type: string
                                    region:
                                      description: |-
                                        region of IBM Cloud VPC.
                                        when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                                        it is expected to set the region, not setting will result in webhook error.
                                      type: string
                                  type: object
                              type: object
                              x-kubernetes-validations:
                              - message: either an id or name must be specified
                                rule: has(self.id) || has(self.name)
                            type: array
                          vpc:
                            description: vpc defines the IBM Cloud VPC.
                            properties:
                              id:
                                description: id of the resource.
                                minLength: 1
                                type: string
                              name:
                                description: name of the resource.
                                minLength: 1
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: an id or name must be provided
                              rule: has(self.id) || has(self.name)
                        type: object
                      region:
                        description: The IBM Cloud Region the cluster lives in.
                        type: string
                      resourceGroup:
                        description: The VPC resources should be created under the
                          resource group.
                        type: string
                      vpc:
                        description: The Name of VPC.
                        type: string
                      zone:
                        description: The Name of availability zone.
                        type: string
                    required:
                    - region
                    - resourceGroup
                    type: object
                required:
                - spec
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
